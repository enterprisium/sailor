# Boxie Configuration (https://mardix.github.io/boxie)
# Boxie is tool to deploy multiple sites and app on a single server
---
- 
  # domain_name (string): the server name without http
  domain_name: 

  # runtime: python|node|static|shell
  # python for wsgi application (default python)
  # node: for node application, where the command should be ie: 'node inde.js 2>&1 | cat'
  # static: for HTML/Static page and PHP
  # shell: for any script that can be executed via the shell script, ie: command 2>&1 | cat
  runtime: static

  # runtime_version: python : 3(default)|2, node: node version
  runtime_version: '3'

  # auto_restart (bool): to force server restarts when deploying
  auto_restart: true

  # static_paths (array): specify list of static path to expose, [/url:path, ...]
  static_paths: 

  # https_only (bool): when true (default), it will redirect http to https
  https_only: true

  # threads (int): The total threads to use
  threads: 4

  # wsgi (bool): if runtime is python by default it will use wsgi, if false it will fallback to the command provided
  wsgi: true

  # letsencrypt (bool) true(default)
  ssl_letsencrypt: true

  # nginx (object): nginx specific config. can be omitted
  nginx:
    cloudflare_acl: false
    include_file: ''
  
  # uwsgi (object): uwsgi specific config. can be omitted
  uwsgi:
    gevent: false
    asyncio: false
  # env (object) custom environment variable
  env: 
    KEY: VALUE
    KEY2: VALUE2

  # scripts to run during application lifecycle
  scripts:

    # release (array): commands to execute each time the application is released/pushed
    release: 
      -
    # destroy (array): commands to execute when the application is being deleted
    destroy: 
      - 
    # predeploy (array): commands to execute before spinning the app
    predeploy: 
      - 
    # postdeploy (array): commands to execute after spinning the app
    postdeploy: 
      - 

  # apps: processes to run. 
  # 'web' is special, it’s the only process type that can receive external HTTP traffic  
  # all other process name will be regular worker. 
  # The name doesn't matter 
  apps:

    # web (string): it’s the only process type that can receive external HTTP traffic
    #-> app:app (for python using wsgi)
    #-> node server.js 2>&1 cat (For other web app which requires a server command)
    #-> /web-root-dir-name (for static html+php)
    web: 

    # worker* (string): command to run, with a name. The name doesn't matter.
    # it can be named anything
    worker: 